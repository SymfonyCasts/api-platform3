diff --git a/src/ApiResource/UserApi.php b/src/ApiResource/UserApi.php
index fb07c33..6c0e643 100644
--- a/src/ApiResource/UserApi.php
+++ b/src/ApiResource/UserApi.php
@@ -29,6 +29,11 @@ class UserApi
 
     public ?string $username = null;
 
+    /**
+     * The plaintext password when being set or changed.
+     */
+    public ?string $password = null;
+
     /**
      * @var array<int, DragonTreasure>
      */
diff --git a/src/State/EntityClassDtoStateProcessor.php b/src/State/EntityClassDtoStateProcessor.php
index e33a749..1654145 100644
--- a/src/State/EntityClassDtoStateProcessor.php
+++ b/src/State/EntityClassDtoStateProcessor.php
@@ -11,6 +11,7 @@ use App\ApiResource\UserApi;
 use App\Entity\User;
 use App\Repository\UserRepository;
 use Symfony\Component\DependencyInjection\Attribute\Autowire;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 
 class EntityClassDtoStateProcessor implements ProcessorInterface
 {
@@ -18,6 +19,7 @@ class EntityClassDtoStateProcessor implements ProcessorInterface
         private UserRepository $userRepository,
         #[Autowire(service: PersistProcessor::class)] private ProcessorInterface $persistProcessor,
         #[Autowire(service: RemoveProcessor::class)] private ProcessorInterface $removeProcessor,
+        private UserPasswordHasherInterface $userPasswordHasher,
     )
     {
 
@@ -56,7 +58,9 @@ class EntityClassDtoStateProcessor implements ProcessorInterface
 
         $entity->setEmail($dto->email);
         $entity->setUsername($dto->username);
-        $entity->setPassword('TODO properly');
+        if ($dto->password) {
+            $entity->setPassword($this->userPasswordHasher->hashPassword($entity, $dto->password));
+        }
         // TODO: handle dragon treasures
 
         return $entity;
