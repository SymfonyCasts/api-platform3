{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "install-install-apip",
            "name": "Install: install apip",
            "description": null
        },
        {
            "id": "install-update-readme-for-database",
            "name": "Install: update README for database",
            "description": null
        },
        {
            "id": "install-install-maker",
            "name": "Install: install maker",
            "description": null
        },
        {
            "id": "firstentity-make-entity",
            "name": "FirstEntity: make:entity",
            "description": null
        },
        {
            "id": "firstentity-correct-isispublished",
            "name": "FirstEntity: correct isIsPublished()",
            "description": null
        },
        {
            "id": "firstentity-make-migration",
            "name": "FirstEntity: make:migration",
            "description": null
        },
        {
            "id": "firstentity-add-apiresource",
            "name": "FirstEntity: Add ApiResource",
            "description": null
        },
        {
            "id": "openapi-add-phpdoc-above-value",
            "name": "OpenApi: Add phpdoc above value",
            "description": null
        },
        {
            "id": "openapi-add-description-option",
            "name": "OpenApi: Add description option",
            "description": null
        },
        {
            "id": "debug-compose-require-debug",
            "name": "Debug: compose require debug",
            "description": null
        },
        {
            "id": "operations-add-5-core-operations",
            "name": "Operations: Add 5 core operations",
            "description": null
        },
        {
            "id": "operations-remove-delete-operation",
            "name": "Operations: remove Delete operation",
            "description": null
        },
        {
            "id": "operations-configure-shortname",
            "name": "Operations: Configure shortName",
            "description": null
        },
        {
            "id": "operations-use-uritemplate-for-getcollection",
            "name": "Operations: Use uriTemplate for GetCollection",
            "description": null
        },
        {
            "id": "operations-remove-dummy-config",
            "name": "Operations: remove dummy config",
            "description": null
        },
        {
            "id": "serialization-add-settextdescription-method",
            "name": "Serialization: Add setTextDescription() method",
            "description": null
        },
        {
            "id": "serialization-remove-setdescription-method",
            "name": "Serialization: Remove setDescription() method",
            "description": null
        },
        {
            "id": "serialization-remove-setplunderedat-method",
            "name": "Serialization: Remove setPlunderedAt method",
            "description": null
        },
        {
            "id": "serialization-install-carbon",
            "name": "Serialization: install carbon",
            "description": null
        },
        {
            "id": "serialization-add-getcreatedatago-method",
            "name": "Serialization: Add getCreatedAtAgo() method",
            "description": null
        },
        {
            "id": "groups-add-normalizationcontext-and-groups",
            "name": "Groups: Add normalizationContext & groups",
            "description": null
        },
        {
            "id": "groups-add-groups-to-several-fields",
            "name": "Groups: Add groups to several fields",
            "description": null
        },
        {
            "id": "groups-add-denormalizationcontext",
            "name": "Groups: Add denormalizationContext",
            "description": null
        },
        {
            "id": "groups-add-groups-to-writable-fields",
            "name": "Groups: Add groups to writable fields",
            "description": null
        },
        {
            "id": "groups-add-group-above-getplunderedatago-method",
            "name": "Groups: Add group above getPlunderedAtAgo() method",
            "description": null
        },
        {
            "id": "groups-add-group-to-settextdescription-method",
            "name": "Groups: Add group to setTextDescription() method",
            "description": null
        },
        {
            "id": "groups-re-add-setdescription-method",
            "name": "Groups: Re-Add setDescription() method",
            "description": null
        },
        {
            "id": "groups-default-the-ispublished-field",
            "name": "Groups: Default the isPublished field",
            "description": null
        },
        {
            "id": "serializationtricks-serializedname",
            "name": "SerializationTricks: SerializedName",
            "description": null
        },
        {
            "id": "serializationtricks-add-a-constructor-arg",
            "name": "SerializationTricks: Add a constructor arg",
            "description": null
        },
        {
            "id": "serializationtricks-rename-arg",
            "name": "SerializationTricks: rename arg",
            "description": null
        },
        {
            "id": "serializationtricks-change-argument-name-back",
            "name": "SerializationTricks: change argument name back",
            "description": null
        },
        {
            "id": "serializationtricks-make-the-constructor-arg-optional",
            "name": "SerializationTricks: Make the constructor arg optional",
            "description": null
        },
        {
            "id": "fixtures-install-fixtures-and-foundry",
            "name": "Fixtures: install fixtures & foundry",
            "description": null
        },
        {
            "id": "fixtures-make-factory",
            "name": "Fixtures: make:factory",
            "description": null
        },
        {
            "id": "fixtures-tweak-getdefaults",
            "name": "Fixtures: Tweak getDefaults()",
            "description": null
        },
        {
            "id": "fixtures-add-fixtures-to-appfixtures",
            "name": "Fixtures: Add fixtures to AppFixtures",
            "description": null
        },
        {
            "id": "pagination-set-max-items-on-dragontreasure",
            "name": "Pagination: Set max items on DragonTreasure",
            "description": null
        },
        {
            "id": "filter-add-booleanfilter",
            "name": "Filter: Add BooleanFilter",
            "description": null
        },
        {
            "id": "filter-move-above-property",
            "name": "Filter: Move above property",
            "description": null
        },
        {
            "id": "filter-add-searchfilter",
            "name": "Filter: Add SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-2nd-field-to-searchfilter",
            "name": "Filter: Add 2nd field to SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-range-filter-on-value",
            "name": "Filter: Add range filter on value",
            "description": null
        },
        {
            "id": "filter-add-getshortdescription-method",
            "name": "Filter: Add getShortDescription() method",
            "description": null
        },
        {
            "id": "filter-add-propertyfilter",
            "name": "Filter: Add PropertyFilter",
            "description": null
        },
        {
            "id": "formats-copy-core-formats-into-config",
            "name": "Formats: copy core formats into config",
            "description": null
        },
        {
            "id": "formats-add-jsonhal-format",
            "name": "Formats: Add jsonhal format",
            "description": null
        },
        {
            "id": "formats-add-csv-format-to-dragontreasure",
            "name": "Formats: Add csv format to DragonTreasure",
            "description": null
        },
        {
            "id": "formats-sort-arguments",
            "name": "Formats: sort arguments",
            "description": null
        },
        {
            "id": "validation-add-constraints-to-name",
            "name": "Validation: Add constraints to name",
            "description": null
        },
        {
            "id": "validation-add-more-constraints",
            "name": "Validation: Add more constraints",
            "description": null
        },
        {
            "id": "validation-add-a-few-property-defaults",
            "name": "Validation: add a few property defaults",
            "description": null
        },
        {
            "id": "user-make-user",
            "name": "User: make:user",
            "description": null
        },
        {
            "id": "user-add-username-property",
            "name": "User: Add username property",
            "description": null
        },
        {
            "id": "user-make-username-column-unique",
            "name": "User: Make username column unique",
            "description": null
        },
        {
            "id": "user-add-migration",
            "name": "User: add migration",
            "description": null
        },
        {
            "id": "user-make-factory-user",
            "name": "User: make:factory User",
            "description": null
        },
        {
            "id": "user-fill-in-getdefaults-in-userfactory",
            "name": "User: Fill in getDefaults() in UserFactory",
            "description": null
        },
        {
            "id": "user-add-30-users-in-appfixtures",
            "name": "User: Add 30 users in AppFixtures",
            "description": null
        },
        {
            "id": "user-make-an-apiresource",
            "name": "User: Make an ApiResource",
            "description": null
        },
        {
            "id": "user-add-serialization-groups",
            "name": "User: Add serialization groups",
            "description": null
        },
        {
            "id": "user-add-validation-constraints",
            "name": "User: Add validation constraints",
            "description": null
        },
        {
            "id": "relation-add-dragontreasure-owner",
            "name": "Relation: Add DragonTreasure.owner",
            "description": null
        },
        {
            "id": "relation-make-migration",
            "name": "Relation: make:migration",
            "description": null
        },
        {
            "id": "relation-update-factory-for-relation",
            "name": "Relation: Update factory for relation",
            "description": null
        },
        {
            "id": "relation-expose-dragontreasure-owner-to-api",
            "name": "Relation: Expose DragonTreasure.owner to API",
            "description": null
        },
        {
            "id": "relation-expose-user-treasures-to-the-api",
            "name": "Relation: Expose User.treasures to the API",
            "description": null
        },
        {
            "id": "relation-embed-user-treasures",
            "name": "Relation: Embed User.treasures",
            "description": null
        },
        {
            "id": "relation-embed-dragontreasure-owner",
            "name": "Relation: Embed DragonTreasure.owner",
            "description": null
        },
        {
            "id": "relation-only-embed-on-get-item",
            "name": "Relation: only embed on GET item",
            "description": null
        },
        {
            "id": "embedwrite-allow-user-owner-to-be-written-through-treasure",
            "name": "EmbedWrite: Allow User.owner to be written through treasure",
            "description": null
        },
        {
            "id": "embedwrite-add-valid-constraint-to-owner",
            "name": "EmbedWrite: Add Valid constraint to owner",
            "description": null
        },
        {
            "id": "embedwrite-make-treasures-writable-on-user",
            "name": "EmbedWrite: make treasures writable on User",
            "description": null
        },
        {
            "id": "embedwrite-allow-props-in-dragontreasure-to-be-written-through-user",
            "name": "EmbedWrite: Allow props in DragonTreasure to be written through User",
            "description": null
        },
        {
            "id": "embedwrite-add-cascade-persist-for-user-treasures",
            "name": "EmbedWrite: Add cascade persist for User.treasures",
            "description": null
        },
        {
            "id": "embedwrite-add-valid-constraint-to-user-treasures",
            "name": "EmbedWrite: Add Valid constraint to User.treasures",
            "description": null
        },
        {
            "id": "embedremoval-add-orphanremoval-to-user-treasures",
            "name": "EmbedRemoval: Add orphanRemoval to User.treasures",
            "description": null
        },
        {
            "id": "relationfilter-add-propertyfilter-to-user",
            "name": "RelationFilter: Add PropertyFilter to User",
            "description": null
        },
        {
            "id": "relationfilter-search-on-dragontreasure-owner",
            "name": "RelationFilter: Search on DragonTreasure.owner",
            "description": null
        },
        {
            "id": "relationfilter-search-on-owner-username",
            "name": "RelationFilter: search on owner.username",
            "description": null
        },
        {
            "id": "subresource-add-2nd-apiresource-to-dt",
            "name": "Subresource: Add 2nd ApiResource to DT",
            "description": null
        },
        {
            "id": "subresource-add-matching-shortname",
            "name": "Subresource: Add matching shortName",
            "description": null
        },
        {
            "id": "subresource-add-urivariables",
            "name": "Subresource: Add uriVariables",
            "description": null
        },
        {
            "id": "subresource-add-normalizationcontext",
            "name": "Subresource: Add normalizationContext",
            "description": null
        },
        {
            "id": "subresource-add-subresource-on-the-other-side",
            "name": "Subresource: Add subresource on the other side",
            "description": null
        },
        {
            "id": "admin-install-encore",
            "name": "Admin: install encore",
            "description": null
        },
        {
            "id": "admin-npm-install",
            "name": "Admin: npm install",
            "description": null
        },
        {
            "id": "admin-install-at-api-platform-admin",
            "name": "Admin: install @api-platform\/admin",
            "description": null
        },
        {
            "id": "admin-install-symfony-ux-react",
            "name": "Admin: install symfony\/ux-react",
            "description": null
        },
        {
            "id": "admin-ad-ux-react-bootstrap",
            "name": "Admin: ad UX React bootstrap",
            "description": null
        },
        {
            "id": "admin-add-reactadmin-js-component",
            "name": "Admin: Add ReactAdmin.js component",
            "description": null
        },
        {
            "id": "admin-install-react-package",
            "name": "Admin: Install react package",
            "description": null
        },
        {
            "id": "admin-enable-react-preset",
            "name": "Admin: enable react preset",
            "description": null
        },
        {
            "id": "admin-install-at-babel-preset-react",
            "name": "Admin: install @babel\/preset-react",
            "description": null
        },
        {
            "id": "delete-me",
            "name": "delete me",
            "description": null
        },
        {
            "id": "admin-add-controller",
            "name": "Admin: Add controller",
            "description": null
        },
        {
            "id": "admin-add-template",
            "name": "Admin: add template",
            "description": null
        }
    ],
    "sha": "6c42d4550243b06c66484bb455fe7d2b29deca1f"
}