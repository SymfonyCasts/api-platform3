{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "customfieldstateprovider-remove-ismine-from-normalizer",
            "name": "CustomFieldStateProvider: remove isMine from normalizer",
            "description": null
        },
        {
            "id": "customfieldstateprovider-add-isownedbyauthenticateduser-property",
            "name": "CustomFieldStateProvider: Add isOwnedByAuthenticatedUser property",
            "description": null
        },
        {
            "id": "customfieldstateprovider-tightening-up-getter-setter",
            "name": "CustomFieldStateProvider: Tightening up getter\/setter",
            "description": null
        },
        {
            "id": "customfieldstateprovider-exposing-in-the-api",
            "name": "CustomFieldStateProvider: Exposing in the API",
            "description": null
        },
        {
            "id": "customfieldstateprovider-make-state-provider",
            "name": "CustomFieldStateProvider: make:state-provider",
            "description": null
        },
        {
            "id": "customfieldstateprovider-add-dd",
            "name": "CustomFieldStateProvider: add dd()",
            "description": null
        },
        {
            "id": "customfieldstateprovider-activate-on-class",
            "name": "CustomFieldStateProvider: Activate on class",
            "description": null
        },
        {
            "id": "customfieldstateprovider-inject-providerinterface",
            "name": "CustomFieldStateProvider: Inject ProviderInterface",
            "description": null
        },
        {
            "id": "customfieldstateprovider-autowire-attribute",
            "name": "CustomFieldStateProvider: #[Autowire] attribute",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-field-but-hardcoded",
            "name": "CustomFieldStateProvider: Set field, but hardcoded",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-real-value",
            "name": "CustomFieldStateProvider: Set real value",
            "description": null
        },
        {
            "id": "customfieldstateprovider-dd-again",
            "name": "CustomFieldStateProvider: dd() again",
            "description": null
        },
        {
            "id": "customfieldstateprovider-inject-collection-provider",
            "name": "CustomFieldStateProvider: Inject collection provider",
            "description": null
        },
        {
            "id": "customfieldstateprovider-dd-the-collection-result",
            "name": "CustomFieldStateProvider: dd() the collection result",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-the-field-on-each-item",
            "name": "CustomFieldStateProvider: set the field on each item",
            "description": null
        },
        {
            "id": "customfieldstateprovider-updating-test",
            "name": "CustomFieldStateProvider: Updating test",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-field-also-in-processor",
            "name": "CustomFieldStateProvider: Set field also in processor",
            "description": null
        },
        {
            "id": "publishprocessor-add-test-for-publishing",
            "name": "PublishProcessor: Add test for publishing",
            "description": null
        },
        {
            "id": "publishprocessor-make-field-writable",
            "name": "PublishProcessor: make field writable",
            "description": null
        },
        {
            "id": "publishprocessor-rename-existing-processor",
            "name": "PublishProcessor: rename existing processor",
            "description": null
        },
        {
            "id": "publishprocessor-change-to-autowire",
            "name": "PublishProcessor: change to #[Autowire]",
            "description": null
        },
        {
            "id": "publishprocessor-set-processor-on-resource",
            "name": "PublishProcessor: set processor on resource",
            "description": null
        },
        {
            "id": "publishprocessor-remove-conditional-code",
            "name": "PublishProcessor: remove conditional code",
            "description": null
        },
        {
            "id": "publishprocessor-return-from-processor",
            "name": "PublishProcessor: Return from processor",
            "description": null
        },
        {
            "id": "publishprocessor-dump-context",
            "name": "PublishProcessor: dump($context)",
            "description": null
        },
        {
            "id": "publishprocessor-check-for-publish-change",
            "name": "PublishProcessor: check for publish change",
            "description": null
        },
        {
            "id": "publishprocessor-test-for-notification",
            "name": "PublishProcessor: Test for Notification",
            "description": null
        },
        {
            "id": "publishprocessor-create-notification",
            "name": "PublishProcessor: Create Notification",
            "description": null
        },
        {
            "id": "customresource-create-dailyquest",
            "name": "CustomResource: Create DailyQuest",
            "description": null
        },
        {
            "id": "customresource-add-shortname",
            "name": "CustomResource: Add shortName",
            "description": null
        },
        {
            "id": "customresource-make-state-provider",
            "name": "CustomResource: make:state-provider",
            "description": null
        },
        {
            "id": "customresource-return-empty-objects-from-provider",
            "name": "CustomResource: Return empty objects from provider",
            "description": null
        },
        {
            "id": "customresource-add-provider-option",
            "name": "CustomResource: Add provider option",
            "description": null
        },
        {
            "id": "customresource-add-id-property",
            "name": "CustomResource: Add id property",
            "description": null
        },
        {
            "id": "customresource-change-id-to-day",
            "name": "CustomResource: Change id to \"day\"",
            "description": null
        },
        {
            "id": "customresource-add-identifier-true",
            "name": "CustomResource: Add identifier: true",
            "description": null
        },
        {
            "id": "customresource-move-identifier-to-string-method",
            "name": "CustomResource: Move identifier to string method",
            "description": null
        },
        {
            "id": "customresource-add-ignore-and-readable-false",
            "name": "CustomResource: Add Ignore & readable=false",
            "description": null
        },
        {
            "id": "customresource-add-other-fields-and-populate",
            "name": "CustomResource: Add other fields & populate",
            "description": null
        },
        {
            "id": "customitem-dd-operation",
            "name": "CustomItem: dd($operation)",
            "description": null
        },
        {
            "id": "customitem-add-code-for-collection-operation",
            "name": "CustomItem: Add code for collection operation",
            "description": null
        },
        {
            "id": "customitem-return-1-item-or-null",
            "name": "CustomItem: return 1 item or null",
            "description": null
        },
        {
            "id": "customresourceprocessor-add-operations",
            "name": "CustomResourceProcessor: Add operations",
            "description": null
        },
        {
            "id": "customresourceprocessor-create-test-class",
            "name": "CustomResourceProcessor: Create test class",
            "description": null
        },
        {
            "id": "customresourceprocessor-add-patch-test",
            "name": "CustomResourceProcessor: Add PATCH test",
            "description": null
        },
        {
            "id": "customresourceprocessor-change-to-2-days",
            "name": "CustomResourceProcessor: change to -2 days",
            "description": null
        },
        {
            "id": "customresourceprocessor-make-state-processor",
            "name": "CustomResourceProcessor: make:state-processor",
            "description": null
        },
        {
            "id": "customresourceprocessor-add-dd-and-hook-up",
            "name": "CustomResourceProcessor: add dd() and hook up",
            "description": null
        },
        {
            "id": "customresourceprocessor-move-processor-to-class-level",
            "name": "CustomResourceProcessor: move processor to class-level",
            "description": null
        },
        {
            "id": "customresourceprocessor-set-lastupdated-from-processor",
            "name": "CustomResourceProcessor: set lastUpdated from processor",
            "description": null
        },
        {
            "id": "customresourceprocessor-remove-dump",
            "name": "CustomResourceProcessor: remove ->dump()",
            "description": null
        },
        {
            "id": "customresourcerelations-add-treasures-property",
            "name": "CustomResourceRelations: add treasures property",
            "description": null
        },
        {
            "id": "customresourcerelations-add-treasures-to-test",
            "name": "CustomResourceRelations: Add treasures to test",
            "description": null
        },
        {
            "id": "customresourcerelations-make-isownedbyauthenticateduser-default-to-null",
            "name": "CustomResourceRelations: make isOwnedByAuthenticatedUser default to null",
            "description": null
        },
        {
            "id": "customresourcerelations-add-phpdoc-to-collection",
            "name": "CustomResourceRelations: Add phpdoc to collection",
            "description": null
        },
        {
            "id": "embeddingnonresource-embed-new-questtreasure",
            "name": "EmbeddingNonResource: Embed new QuestTreasure",
            "description": null
        },
        {
            "id": "embeddingnonresource-try-genid-false",
            "name": "EmbeddingNonResource: Try genId: false",
            "description": null
        },
        {
            "id": "embeddingnonresource-refactor-to-single-to-show-off-genid",
            "name": "EmbeddingNonResource: Refactor to single to show off genId",
            "description": null
        },
        {
            "id": "pagination-return-traversablepaginator",
            "name": "Pagination: Return TraversablePaginator",
            "description": null
        },
        {
            "id": "pagination-separate-page-and-itemsperpage-vars",
            "name": "Pagination: Separate page & itemsPerPage vars",
            "description": null
        },
        {
            "id": "pagination-inject-pagination-and-grab-variables",
            "name": "Pagination: Inject Pagination & grab variables",
            "description": null
        },
        {
            "id": "pagination-set-paginationitemsperpage",
            "name": "Pagination: Set paginationItemsPerPage",
            "description": null
        },
        {
            "id": "pagination-calc-and-use-offset",
            "name": "Pagination: Calc & use offset",
            "description": null
        },
        {
            "id": "pagination-fix-item-provider-part",
            "name": "Pagination: fix item provider part",
            "description": null
        },
        {
            "id": "dto-remove-all-api-stuff-from-user",
            "name": "DTO: Remove all Api stuff from User",
            "description": null
        },
        {
            "id": "dto-delete-more-stuff",
            "name": "DTO: Delete more stuff",
            "description": null
        },
        {
            "id": "dto-create-the-class",
            "name": "DTO: Create the class",
            "description": null
        },
        {
            "id": "dto-add-id",
            "name": "DTO: Add id",
            "description": null
        },
        {
            "id": "dto-give-userdto-shortname",
            "name": "DTO: Give UserDto shortName",
            "description": null
        },
        {
            "id": "stateoptions-set-provider-to-orm-collection",
            "name": "StateOptions: set provider to orm collection",
            "description": null
        },
        {
            "id": "stateoptions-add-stateoptions",
            "name": "StateOptions: Add stateOptions",
            "description": null
        },
        {
            "id": "stateoptions-add-more-fields",
            "name": "StateOptions: Add more fields",
            "description": null
        },
        {
            "id": "stateoptions-remove-the-provider-option",
            "name": "StateOptions: remove the provider option",
            "description": null
        },
        {
            "id": "stateoptions-add-non-existent-field",
            "name": "StateOptions: Add non-existent field",
            "description": null
        },
        {
            "id": "stateoptions-remove-non-existent-field",
            "name": "StateOptions: Remove non-existent field",
            "description": null
        },
        {
            "id": "stateoptions-add-dragontreasures",
            "name": "StateOptions: Add dragonTreasures",
            "description": null
        },
        {
            "id": "stateoptions-add-phpdoc-for-collection",
            "name": "StateOptions: Add phpdoc for Collection",
            "description": null
        },
        {
            "id": "stateoptions-set-paginationitemsperpage",
            "name": "StateOptions: Set paginationItemsPerPage",
            "description": null
        },
        {
            "id": "stateoptions-add-a-filter",
            "name": "StateOptions: Add a filter",
            "description": null
        },
        {
            "id": "dtoprovider-create-state-provider",
            "name": "DtoProvider: Create state provider",
            "description": null
        },
        {
            "id": "dtoprovider-add-provider-option",
            "name": "DtoProvider: add provider option",
            "description": null
        },
        {
            "id": "providerlogic-query-and-map-to-dto",
            "name": "ProviderLogic: Query & Map to DTO",
            "description": null
        },
        {
            "id": "providerlogic-dump-the-iterator",
            "name": "ProviderLogic: dump the iterator",
            "description": null
        },
        {
            "id": "providerlogic-map-entities-to-dtos",
            "name": "ProviderLogic: Map entities to DTOs",
            "description": null
        },
        {
            "id": "providerlogic-add-a-custom-field",
            "name": "ProviderLogic: Add a custom field",
            "description": null
        },
        {
            "id": "delete-me-1",
            "name": "delete me 1",
            "description": null
        },
        {
            "id": "delete-me-2",
            "name": "delete me 2",
            "description": null
        },
        {
            "id": "providerlogic-return-traversablepaginator",
            "name": "ProviderLogic: Return TraversablePaginator",
            "description": null
        },
        {
            "id": "providerlogic-check-for-collectionoperationinterface",
            "name": "ProviderLogic: Check for CollectionOperationInterface",
            "description": null
        },
        {
            "id": "providerlogic-using-core-itemprovider",
            "name": "ProviderLogic: Using core ItemProvider",
            "description": null
        },
        {
            "id": "providerlogic-only-use-published-treasures",
            "name": "ProviderLogic: Only use published treasures",
            "description": null
        },
        {
            "id": "dtoprocessor-add-dump-in-test",
            "name": "DtoProcessor: add dump() in test",
            "description": null
        },
        {
            "id": "dtoprocessor-hardcode-id-temporarily",
            "name": "DtoProcessor: Hardcode id temporarily",
            "description": null
        },
        {
            "id": "dtoprocessor-remove-tmp-code",
            "name": "DtoProcessor: remove tmp code",
            "description": null
        },
        {
            "id": "dtoprocessor-make-state-processor",
            "name": "DtoProcessor: Make state-processor",
            "description": null
        },
        {
            "id": "dtoprocessor-dump-data",
            "name": "DtoProcessor: dump $data",
            "description": null
        },
        {
            "id": "dtoprocessor-add-processor-mapping-logic",
            "name": "DtoProcessor: add processor mapping logic",
            "description": null
        },
        {
            "id": "dtoprocessor-save-in-processor",
            "name": "DtoProcessor: Save in processor",
            "description": null
        },
        {
            "id": "dtoprocessor-set-id-on-dto",
            "name": "DtoProcessor: set id on DTO",
            "description": null
        },
        {
            "id": "dtoprocessor-also-delete-in-processor",
            "name": "DtoProcessor: Also delete in processor",
            "description": null
        },
        {
            "id": "dtoprocessor-add-in-password-hashing",
            "name": "DtoProcessor: Add in password hashing",
            "description": null
        },
        {
            "id": "controllerfields-test-that-id-is-not-included",
            "name": "ControlFields: test that id is not included",
            "description": null
        },
        {
            "id": "controllerfields-set-readable-false",
            "name": "ControlFields: Set readable: false",
            "description": null
        },
        {
            "id": "controllerfields-repeat-for-id",
            "name": "ControlFields: Repeat for id",
            "description": null
        },
        {
            "id": "controllerfields-showing-read-write-in-test",
            "name": "ControlFields: showing read\/write in test",
            "description": null
        },
        {
            "id": "controllerfields-readable-false",
            "name": "ControlFields: readable: false",
            "description": null
        },
        {
            "id": "controllerfields-writable-false",
            "name": "ControlFields: writable: false",
            "description": null
        },
        {
            "id": "controllerfields-ignored-attributes-for-normalization",
            "name": "ControlFields: IGNORED_ATTRIBUTES for normalization",
            "description": null
        },
        {
            "id": "controllerfields-now-for-denormalization",
            "name": "ControlFields: Now for denormalization",
            "description": null
        },
        {
            "id": "controllerfields-ignore",
            "name": "ControlFields: #[Ignore]",
            "description": null
        },
        {
            "id": "controllerfields-reset-tmp-code",
            "name": "ControlFields: Reset tmp code",
            "description": null
        },
        {
            "id": "controllerfields-try-sending-id",
            "name": "ControlFields: Try sending id",
            "description": null
        },
        {
            "id": "controllerfields-try-writable-false",
            "name": "ControlFields: Try writable: false",
            "description": null
        },
        {
            "id": "controlfields-make-treasures-and-flamethrowing-writable-false",
            "name": "ControlFields: make treasures & flameThrowing writable: false",
            "description": null
        },
        {
            "id": "validation-remove-post-fields-in-test",
            "name": "Validation: remove POST fields in test",
            "description": null
        },
        {
            "id": "validation-move-basic-constraints",
            "name": "Validation: Move basic constraints",
            "description": null
        },
        {
            "id": "validation-re-add-post-fields",
            "name": "Validation: Re-add POST fields",
            "description": null
        },
        {
            "id": "security-re-add-security",
            "name": "Security: Re-add security",
            "description": null
        },
        {
            "id": "automapper-install-our-lib",
            "name": "AutoMapper: \"install\" our lib",
            "description": null
        },
        {
            "id": "automapper-using-in-entityclassdtostateprocessor",
            "name": "AutoMapper: using in EntityClassDtoStateProcessor",
            "description": null
        },
        {
            "id": "automapper-create-userapitoentitymapper",
            "name": "AutoMapper: create UserApiToEntityMapper",
            "description": null
        },
        {
            "id": "automapper-implement-init-and-dd",
            "name": "AutoMapper: Implement init() & dd",
            "description": null
        },
        {
            "id": "automapper-implement-populate",
            "name": "AutoMapper: implement populate()",
            "description": null
        },
        {
            "id": "automapper-remove-password-hasher",
            "name": "AutoMapper: Remove password hasher",
            "description": null
        },
        {
            "id": "automapper-use-mapper-in-provider",
            "name": "AutoMapper: Use mapper in provider",
            "description": null
        },
        {
            "id": "automapper-create-userentitytoapimapper",
            "name": "AutoMapper: Create UserEntityToApiMapper",
            "description": null
        },
        {
            "id": "genericcode-dump-args",
            "name": "GenericCode: Dump args",
            "description": null
        },
        {
            "id": "genericcode-pass-around-resourceclass",
            "name": "GenericCode: Pass around resourceClass",
            "description": null
        },
        {
            "id": "genericcode-dump-operation-again",
            "name": "GenericCode: dump $operation again",
            "description": null
        },
        {
            "id": "genericcode-use-entitymanager-dynamic-class",
            "name": "GenericCode: Use entityManager + dynamic class",
            "description": null
        },
        {
            "id": "genericcode-remove-all-user-mentions",
            "name": "GenericCode: Remove all user mentions",
            "description": null
        },
        {
            "id": "treasure-delete-apiresource-stuff",
            "name": "Treasure: Delete ApiResource stuff",
            "description": null
        },
        {
            "id": "treasure-create-dragontreasure-resource-class",
            "name": "Treasure: Create DragonTreasure resource class",
            "description": null
        },
        {
            "id": "treasure-create-dragontreasureentitytoapimapper",
            "name": "Treasure: Create DragonTreasureEntityToApiMapper",
            "description": null
        },
        {
            "id": "treasure-add-owner-property",
            "name": "Treasure: Add owner property",
            "description": null
        },
        {
            "id": "treasure-map-the-missing-fields",
            "name": "Treasure: Map the missing fields",
            "description": null
        },
        {
            "id": "treasure-add-real-ismine-logic",
            "name": "Treasure: Add real isMine logic",
            "description": null
        },
        {
            "id": "relations-dump-user-dtos",
            "name": "Relations: dump user dtos",
            "description": null
        },
        {
            "id": "relations-change-user-to-the-dto",
            "name": "Relations: Change User to the DTO",
            "description": null
        },
        {
            "id": "relations-map-dragontreasures-to-api",
            "name": "Relations: map DragonTreasures to API",
            "description": null
        },
        {
            "id": "relations-set-depth-1",
            "name": "Relations: Set depth=1",
            "description": null
        },
        {
            "id": "relations-remove-dd-temporarily",
            "name": "Relations: remove dd() temporarily",
            "description": null
        },
        {
            "id": "relations-change-depth-0",
            "name": "Relations: change depth=0",
            "description": null
        },
        {
            "id": "relations-remove-dd-again",
            "name": "Relations: remove dd() again",
            "description": null
        },
        {
            "id": "relations-add-depth-0-to-dragontreasure-mapper",
            "name": "Relations: add depth=0 to DragonTreasure mapper",
            "description": null
        },
        {
            "id": "treasurewrite-add-api-entity-mapper",
            "name": "TreasureWrite: add Api -> entity mapper",
            "description": null
        },
        {
            "id": "treasurewrite-rename-test-method",
            "name": "TreasureWrite: Rename test method",
            "description": null
        },
        {
            "id": "treasurewrite-add-validation",
            "name": "TreasureWrite: Add validation",
            "description": null
        },
        {
            "id": "treasurewrite-automatically-set-owner",
            "name": "TreasureWrite: Automatically set owner",
            "description": null
        },
        {
            "id": "treasurewrite-populate-other-fields",
            "name": "TreasureWrite: Populate other fields",
            "description": null
        },
        {
            "id": "treasurewrite-re-add-operations-and-security",
            "name": "TreasureWrite: Re-add operations & security",
            "description": null
        },
        {
            "id": "treasurewrite-rename-voter-class",
            "name": "TreasureWrite: Rename voter class",
            "description": null
        },
        {
            "id": "treasurewrite-update-voter-class",
            "name": "TreasureWrite: Update voter class",
            "description": null
        },
        {
            "id": "treasurewrite-correct-test-by-comparing-id",
            "name": "TreasureWrite: Correct test by comparing id",
            "description": null
        },
        {
            "id": "treasurewrite-add-patch-headers",
            "name": "TreasureWrite: add patch headers",
            "description": null
        },
        {
            "id": "treasurewrite-remove-dd-for-now",
            "name": "TreasureWrite: remove dd() for now",
            "description": null
        },
        {
            "id": "treasurewrite-re-add-isvalidowner",
            "name": "TreasureWrite: Re-add isValidOwner",
            "description": null
        },
        {
            "id": "treasurepublished-add-ispublished-and-map",
            "name": "TreasurePublished: Add isPublished and map",
            "description": null
        },
        {
            "id": "treasurepublished-add-security-to-ispublished",
            "name": "TreasurePublished: Add security to isPublished",
            "description": null
        },
        {
            "id": "treasurepublished-allow-writable-ispublished",
            "name": "TreasurePublished: Allow writable isPublished",
            "description": null
        },
        {
            "id": "treasurepublished-add-new-state-processor",
            "name": "TreasurePublished: Add new state processor",
            "description": null
        },
        {
            "id": "treasurepublished-decorate-the-normal-processor",
            "name": "TreasurePublished: Decorate the normal processor",
            "description": null
        },
        {
            "id": "treasurepublished-dump-previous-data",
            "name": "TreasurePublished: Dump previous_data",
            "description": null
        },
        {
            "id": "treasurepublished-add-notification-code",
            "name": "TreasurePublished: add notification code",
            "description": null
        },
        {
            "id": "relationswrite-re-add-dd",
            "name": "RelationsWrite: Re-add dd()",
            "description": null
        },
        {
            "id": "relationswrite-send-owner-manually",
            "name": "RelationsWrite: send owner manually",
            "description": null
        },
        {
            "id": "relationswrite-map-userapi-to-entity",
            "name": "RelationsWrite: map UserApi to entity",
            "description": null
        },
        {
            "id": "relationswrite-duplicate-and-rename-test",
            "name": "RelationsWrite: Duplicate & rename test",
            "description": null
        },
        {
            "id": "relationswrite-update-test-add-remove-treasure",
            "name": "RelationsWrite: Update test: add\/remove treasure",
            "description": null
        },
        {
            "id": "relationswrite-dump-userapi",
            "name": "RelationsWrite: dump UserApi",
            "description": null
        },
        {
            "id": "relationswrite-make-dragontreasures-writable",
            "name": "RelationsWrite: make dragonTreasures writable",
            "description": null
        },
        {
            "id": "relationswrite-map-dragontreasureapi-to-entity",
            "name": "RelationsWrite: Map DragonTreasureApi to entity",
            "description": null
        },
        {
            "id": "relationswrite-use-property-accessor",
            "name": "RelationsWrite: Use property accessor",
            "description": null
        },
        {
            "id": "relationswrite-dump-in-removedragontreasure",
            "name": "RelationsWrite: dump in removeDragonTreasure",
            "description": null
        },
        {
            "id": "relationswrite-remove-dumps",
            "name": "RelationsWrite: remove dumps",
            "description": null
        },
        {
            "id": "relationswrite-remove-adding-treasure-in-test",
            "name": "RelationsWrite: Remove adding treasure in test",
            "description": null
        },
        {
            "id": "relationswrite-re-activate-constraint",
            "name": "RelationsWrite: Re-activate constraint",
            "description": null
        },
        {
            "id": "relationswrite-prove-the-treasure-is-stolen",
            "name": "RelationsWrite: Prove the treasure is stolen",
            "description": null
        },
        {
            "id": "relationswrite-remove-extra-get-in-test",
            "name": "RelationsWrite: remove extra get() in test",
            "description": null
        },
        {
            "id": "relationswrite-change-target-on-constraint",
            "name": "RelationsWrite: Change target on constraint",
            "description": null
        },
        {
            "id": "relationswrite-remove-annotation-stuff",
            "name": "RelationsWrite: Remove annotation stuff",
            "description": null
        },
        {
            "id": "relationswrite-move-constraint-to-top-of-class",
            "name": "RelationsWrite: Move constraint to top of class",
            "description": null
        },
        {
            "id": "relationswrite-simplify-validator",
            "name": "RelationsWrite: Simplify validator",
            "description": null
        },
        {
            "id": "relationswrite-remove-dump-in-test",
            "name": "RelationsWrite: remove dump() in test",
            "description": null
        }
    ],
    "sha": "d0cbcee80f6e443d2295b9d8a06b3e76f70f430a"
}