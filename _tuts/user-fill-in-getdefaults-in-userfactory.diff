diff --git a/src/Factory/UserFactory.php b/src/Factory/UserFactory.php
index 219971e..850f064 100644
--- a/src/Factory/UserFactory.php
+++ b/src/Factory/UserFactory.php
@@ -4,6 +4,7 @@ namespace App\Factory;
 
 use App\Entity\User;
 use App\Repository\UserRepository;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 use Zenstruck\Foundry\ModelFactory;
 use Zenstruck\Foundry\Proxy;
 use Zenstruck\Foundry\RepositoryProxy;
@@ -29,12 +30,24 @@ use Zenstruck\Foundry\RepositoryProxy;
  */
 final class UserFactory extends ModelFactory
 {
+    const USERNAMES = [
+        'FlamingInferno',
+        'ScaleSorcerer',
+        'TheDragonWithBadBreath',
+        'BurnedOut',
+        'ForgotMyOwnName',
+        'ClumsyClaws',
+        'HoarderOfUselessTrinkets',
+    ];
+
     /**
      * @see https://symfony.com/bundles/ZenstruckFoundryBundle/current/index.html#factories-as-services
      *
      * @todo inject services if required
      */
-    public function __construct()
+    public function __construct(
+        private UserPasswordHasherInterface $passwordHasher
+    )
     {
         parent::__construct();
     }
@@ -47,10 +60,9 @@ final class UserFactory extends ModelFactory
     protected function getDefaults(): array
     {
         return [
-            'email' => self::faker()->text(180),
-            'password' => self::faker()->text(),
-            'roles' => [],
-            'username' => self::faker()->text(255),
+            'email' => self::faker()->email(),
+            'password' => 'password',
+            'username' => self::faker()->randomElement(self::USERNAMES) . self::faker()->randomNumber(3),
         ];
     }
 
@@ -60,7 +72,12 @@ final class UserFactory extends ModelFactory
     protected function initialize(): self
     {
         return $this
-            // ->afterInstantiate(function(User $user): void {})
+            ->afterInstantiate(function(User $user): void {
+                $user->setPassword($this->passwordHasher->hashPassword(
+                    $user,
+                    $user->getPassword()
+                ));
+            })
         ;
     }
 
